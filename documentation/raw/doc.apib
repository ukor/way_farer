FORMAT: 1A
# Way Farer
Way farer is a simple bus transportation booking server

# Group Error
### Error Response
The structure for all error response

+ Response 200 (application/json)

        {
            "status": "error",
            "error": "Error message",
            "code": "error code",
        }

# Group Users
## Sign Up [/v1/auth/signup]
### Register new user [POST]
Create a new user using this endpoint. It takes a JSON payload containing the user details.

+ Request (application/json)

        {
            first_name: 'John',
            last_name: 'Doe',
            email: 'johndoe@example.com',
            password: 'password'
        }


+ Response 200 (application/json)

        {
            status: 'success',
            data: {
                isAdmin: true,
                token: 'somelongstring',
                userId: 'somestrings',
            }
        }

## Sign In [/v1/auth/signin]
### Login user [POST]
Sign in an existing user. It takes a JSON payload containing the user email address and password.

+ Request (application/json)

        {
            email: 'johndoe@example.com',
            password: 'password'
        }


+ Response 200 (application/json)

        {
            status: 'success',
            data: {
                isAdmin: true,
                token: 'somelongstring',
                userId: 'somestrings',
            }
        }

# Group Trips
## Trips Collection [/v1/trips]
### Create Trip [POST]
This endpoint allows admins to create new trips.
Token can be pass with the Authorization header or with the request; When both are passed the Authorization header takes precedence.

+ Request (application/json)
    + Attributes
        + token: jwttoken (string)
        + user_id: someUserId (string, required)
        + is_admin: true (boolean)
        + bus_id: someBusId (string, required)
        + origin: Abakaliki (string, required)
        + destination: Asaba (string, required)
        + trip_date: 2019/07/18 09:00:00 (string, required)
        + fare: 5500 (number, required)

    + Headers

            Authorization: token

    + Body

            {
                token: 'jwttoken'
                user_id: 'someUserId',
                is_admin: true,
                bus_id: 'some_string',
                origin: 'Abakaliki',
                destination: 'Asaba',
                trip_date: '2019/07/17 09:00:00',
                fare: 5500
            }

+ Response 200 (application/json)

        {
            status: 'success',
            data: {
                trip_id: 'someTripId',
                bus_id: 'someBusId',
                origin: 'Abakaliki',
                destination: 'Asaba',
                trip_date: '',
                fare: 5500.00,
                currency: 'NGN'
            }
        }
### Fetch Trip [GET]
Allows Admin and user to view all trip

+ Request (application/json)
		+ Headers
				Authorization: token


# Group Bookings
## Trips Collection [/v1/bookings]
### Create Bookings [POST]
User can create bookings.

+ Request (application/json)
		+ Attributes
				+ token: jwttoken (string)
        + user_id: someUserId (string, required)
        + is_admin: true (boolean)
        + trip_id: someBusId (string, required)
				+ seat_number: (number)
